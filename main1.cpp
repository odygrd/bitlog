#include <filesystem>#include <iostream>#include <system_error>#include <thread>//#include "bitlog/bitlog.h"int main(){  //  std::filesystem::remove("/dev/shm/testlol.storage");  //  std::filesystem::remove("/dev/shm/testlol.metadata");  //  std::filesystem::remove("/dev/shm/testlol.ready");  //  std::filesystem::remove("/dev/shm/testlol.lock");  //  //  BoundedQueue q {};  //  std::error_code res = q.create(4096, std::filesystem::path{}, "testlol");  //  //  if (res)  //  {  //    std::cout << " error " << res.message() << std::endl;  //    return 0;  //  }  //  //  std::cout << " lol " << std::endl;  //  //  size_t i = 0;  //  while(true)  //  {  //    std::byte* buffer = q.prepare_write(sizeof(size_t));  //  //    if (buffer)  //    {  //      ++i;  //      std::memcpy(buffer, &i, sizeof(size_t));  //      q.finish_write(sizeof(size_t));  //      q.commit_write();  //  //      std::cout << "pushed item " << i << std::endl;  //    }  //  //    std::this_thread::sleep_for(std::chrono::seconds{1});  //  }//  using log_client_config_t = bitlog::LogClientConfig<bitlog::BoundedQueue, true>;//  using bitlog_t = bitlog::Bitlog<log_client_config_t>;//  bitlog_t::init(log_client_config_t{"mytestapp"});//  bitlog_t::instance().create_logger("testing");//  auto logger = bitlog_t::instance().get_logger("testing");////  bitlog_t::instance().create_logger("testing_test");//  bitlog_t::instance().create_logger("testing_log");//  auto logger2 = bitlog_t::instance().get_logger("testing_log");////  LOG_INFO(logger, "hello world {}", 12u);//  LOG_INFO(logger, "hello doubles {}", 123.3);////  for (int i = 0; i < 3; ++i)//  {//    LOG_INFO(logger2, "hello char {} loop {}", i * 100, char(i));//  }////  std::thread logserv{[]()//                      {//                        bitlog::LoggingService ls;//                        ls.set_app_dir("/dev/shm/mytestapp");////                        while (true)//                        {//                          ls.poll();//                        }//                      }};////  logserv.join();  return 0;}